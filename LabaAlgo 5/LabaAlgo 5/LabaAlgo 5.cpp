#include <iostream>
#include <cmath>
using namespace std;
int main() {
	setlocale(LC_ALL, "ru");
	int a;

	printf("Введите номер задания\n");
	scanf_s("%i", &a);
	switch (a) {
	case 1: {
	/*Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Вывести матрицу на экран и сообщить, какой
элемент является минимальным и его индексы (координаты), а какой максимальным и его
индексы (координаты).
*/
		int N, i, j ;
		int** a;
		printf("Введите размер квадратной матрицы\n");
		scanf_s("%d", &N);
		a = new int*[N];
		for (i = 0; i < N; i++) {//задаем значения матрицы
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				cout << "введите значение елемента такой позиции" << " [" << i << "][" << j << "]" << " = ";
				scanf_s("%d", &a[i][j]);
			}
		}
		int min = a[0][0], max = a[0][0];
		int mini = 0, maxi = 0, minj = 0, maxj = 0;
		for (i=0; i < N; i++) {
			for (j=0; j < N ; j++) {
				
				if (a[i][j] > max) {
					max = a[i][j];
					maxi = i; maxj = j;
				}
				if (a[i][j] < min)
				{
					min = a[i][j];
					mini = i;
					minj = j;
				}
			}
		}
		printf(" Максимальный элемент a[%d][%d] = %d",maxi,maxj, max);
		printf(" Минимальный элемент a[%d][%d] = %d",mini, minj, min);

	}break;
	case 2: {
	/* Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Найти в каждой строке матрицы наибольший
элемент, поменять его местами с элементом главной диагонали*. Вывести матрицу на экран в
форме таблицы.
*/
		int N, i, j;
		int** a;
		int max0 = 0, max1 = 0, max2 = 0;
		printf("Введите размер квадратной матрицы\n");
		scanf_s("%d", &N);
		a = new int* [N];
		for (i = 0; i < N; i++) {//задаем значения матрицы
			a[i] = new int[N];
			for (j = 0; j < N; j++) {
				cout << "введите значение елемента такой позиции" << " [" << i << "][" << j << "]" << " = ";
				scanf_s("%d", &a[i][j]);
			}
		}
		
		for (i = 0; i < N; i++) {
			for (j = 0; j < N; j++) {
				if (i = j) {
					switch (i)
					{
					case 0: {
						for (i = 0; i < N; i++) {
							for (j = 0; j < N; j++) {
								if (a[i][j] > a[i][j + 1]) {
									max0 = a[i][j];
								}
							}
						}
						int A = a[i][j];
						a[i][j] = a[0][0];
						a[0][0] = max0;
					}break;
					case 1: {
						for (i = 0; i < N; i++) {
							for (j = 0; j < N; j++) {
								if (a[i][j] > a[i][j + 1]) {
									max1 = a[i][j];
								}
							}
						}
						a[i][j] = a[1][1];
						a[1][1] = max1;
					}break;
					case 2: {
						for (i = 0; i < N; i++) {
							for (j = 0; j < N; j++) {
								if (a[i][j] > a[i][j + 1]) {
									max2 = a[i][j];
								}
							}
						}
						a[i][j] = a[2][2];
						a[2][2] = max2;
					}break;
					default:
						break;
					}
				}
			}
		}
		for ( i = 0; i < N; i++) {
			for ( j = 0; j < N; j++) {
				printf("%d ", a[i][j]);
			}
			printf("\n");
		}
		
	}break;
		
	case 3: {
	/* Ввести числа N и M – размер матрицы. Последовательно по строкам ввести с
клавиатуры все элементы матрицы. Вычислить и записать в память суммы и произведения
элементов каждой строки матрицы. Результаты отобразить в виде двух столбцов (первый
столбец – сумма в соответствующей строке, второй – произведение).*/

	}break;
	case 4: {
	/* Ввести числа N и M – размер матрицы. Последовательно по строкам ввести с
клавиатуры все элементы матрицы. Вычислить и запомнить сумму и число положительных
элементов каждого столбца матрицы. Результаты отобразить в виде двух строк.*/
	}break;
	case 5: {
	/* Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Вычислить:
1. произведение и число элементов матрицы, находящихся под главной диагональю;*/
	}break;
	case 6: {
	/*Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Вычислить:
2. сумму и число элементов матрицы, находящихся над главной диагональю;*/
	}break;
	case 7: {
	/*Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Вычислить:3. произведение и число положительных элементов матрицы, находящихся под
главной диагональю;*/
	}break;
	case 8: {
	/*Ввести число N – порядок квадратной матрицы. Последовательно по строкам
ввести с клавиатуры все элементы матрицы. Вычислить:4. сумму и число отрицательных элементов матрицы, находящихся над главной
диагональю.*/
	}break;
	}
	return 0;
}